<?xml version="1.0" encoding="UTF-8"?>
<!--

    This Source Code Form is subject to the terms of the Mozilla Public License, v.
    2.0 with a Healthcare Disclaimer.
    A copy of the Mozilla Public License, v. 2.0 with the Healthcare Disclaimer can
    be found under the top level directory, named LICENSE.
    If a copy of the MPL was not distributed with this file, You can obtain one at
    http://mozilla.org/MPL/2.0/.
    If a copy of the Healthcare Disclaimer was not distributed with this file, You
    can obtain one at the project website https://github.com/igia.

    Copyright (C) 2018-2019 Persistent Systems, Inc.

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>io.igia</groupId>
	<artifactId>igia-keycloak</artifactId>
	<packaging>jar</packaging>
	<name>igia Keycloak SMART-on-FHIR support</name>
	<version>0.3.3</version>

	<properties>
        <java.version>1.8</java.version>
		<keycloak.version>4.5.0.Final</keycloak.version>
		<jboss.logging.version>3.3.1.Final</jboss.logging.version>
		<version.swagger.doclet>1.1.2</version.swagger.doclet>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <project.testresult.directory>${project.build.directory}/test-results</project.testresult.directory>
        <maven.build.timestamp.format>yyyyMMddHHmmss</maven.build.timestamp.format>
        <maven.compiler.source>${java.version}</maven.compiler.source>
        <maven.compiler.target>${java.version}</maven.compiler.target>
        <m2e.apt.activation>jdt_apt</m2e.apt.activation>

        <!-- Plugin versions -->
        <maven-clean-plugin.version>3.1.0</maven-clean-plugin.version>
        <maven-compiler-plugin.version>3.8.0</maven-compiler-plugin.version>
        <maven-eclipse-plugin.version>2.10</maven-eclipse-plugin.version>
        <maven-enforcer-plugin.version>3.0.0-M2</maven-enforcer-plugin.version>
        <maven-resources-plugin.version>3.1.0</maven-resources-plugin.version>
        <maven-surefire-plugin.version>2.22.0</maven-surefire-plugin.version>
        <dockerfile-maven-plugin.version>1.4.7</dockerfile-maven-plugin.version>
        <sonar-maven-plugin.version>3.5.0.1254</sonar-maven-plugin.version>
        <git-commit-id-plugin.version>2.2.5</git-commit-id-plugin.version>
	</properties>

	<dependencies>
       <dependency>
            <groupId>org.keycloak</groupId>
            <artifactId>keycloak-core</artifactId>
            <version>${keycloak.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.keycloak</groupId>
            <artifactId>keycloak-server-spi</artifactId>
            <version>${keycloak.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.keycloak</groupId>
            <artifactId>keycloak-server-spi-private</artifactId>
            <version>${keycloak.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.keycloak</groupId>
            <artifactId>keycloak-services</artifactId>
            <version>${keycloak.version}</version>
        </dependency>
        <dependency>
            <groupId>org.jboss.logging</groupId>
            <artifactId>jboss-logging</artifactId>
            <version>${jboss.logging.version}</version>
            <scope>provided</scope>
        </dependency>
        
        <dependency>
        	<groupId>junit</groupId>
        	<artifactId>junit</artifactId>
        	<version>4.13.1</version>
        	<scope>test</scope>
      	</dependency>
		<dependency>
	    	<groupId>org.mockito</groupId>
	        <artifactId>mockito-core</artifactId>
	        <version>2.15.0</version>
		</dependency>      	
	</dependencies>

	<build>
		<plugins>
			<plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven-compiler-plugin.version}</version>
				<configuration>
					<source>${maven.compiler.source}</source>
					<target>${maven.compiler.target}</target>
				</configuration>
			</plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-eclipse-plugin</artifactId>
                <version>${maven-eclipse-plugin.version}</version>
                <configuration>
                    <downloadSources>true</downloadSources>
                    <downloadJavadocs>true</downloadJavadocs>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>${maven-resources-plugin.version}</version>
                <executions>
                    <execution>
                        <id>default-resources</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>target/classes</outputDirectory>
                            <useDefaultDelimiters>false</useDefaultDelimiters>
                            <delimiters>
                                <delimiter>#</delimiter>
                            </delimiters>
                            <resources>
                                <resource>
                                    <directory>src/main/resources/</directory>
                                    <filtering>true</filtering>
                                    <includes>
                                        <include>config/*.yml</include>
                                    </includes>
                                </resource>
                                <resource>
                                    <directory>src/main/resources/</directory>
                                    <filtering>false</filtering>
                                    <excludes>
                                        <exclude>config/*.yml</exclude>
                                    </excludes>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                    <execution>
                        <id>docker-resources</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>target/</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>src/main/docker/</directory>
                                    <filtering>false</filtering>
                                    <excludes>
                                        <exclude>**/*.yml</exclude>
                                    </excludes>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>com.spotify</groupId>
                <artifactId>dockerfile-maven-plugin</artifactId>
                <version>${dockerfile-maven-plugin.version}</version>
                <!--
                Uncomment the section below to build the docker image with mvn package and and push it with mvn deploy
                <executions>
                    <execution>
                    <id>default</id>
                    <goals>
                        <goal>build</goal>
                        <goal>push</goal>
                    </goals>
                    </execution>
                </executions>
                -->
                <configuration>
                    <repository>igia/${project.artifactId}</repository>
                    <tag>latest</tag>
                    <contextDirectory>${project.build.directory}</contextDirectory>
                </configuration>
            </plugin>
		    <!-- igia-added-plugins -->
            <plugin>
                <groupId>com.mycila</groupId>
                <artifactId>license-maven-plugin</artifactId>
                <version>3.0</version>
                <configuration>
                    <header>HEADER</header>

                    <includes>
                        <include>**/*.*</include>
                    </includes>
                    <excludes>
                        <exclude>node_modules/**/*</exclude>
                        <exclude>node/**/*</exclude>
                        <exclude>target/**/*</exclude>
                        <exclude>.mvn/**/*</exclude>
                        <exclude>.settings/**/*</exclude>
                        <exclude>.vscode/**/*</exclude>
                        <exclude>**/*.md</exclude>
                        <exclude>**/*.csv</exclude>
                        <exclude>**/*.p12</exclude>
                        <exclude>**/robots.txt</exclude>
                        <exclude>**/banner.txt</exclude>
                        <exclude>**/manifest.*</exclude>
                        <exclude>**/.dockerignore</exclude>
                        <exclude>LICENSE</exclude>
                        <exclude>HEADER</exclude>
                        <exclude>.gitattributes</exclude>
                        <exclude>.huskyrc</exclude>
                        <exclude>.prettierrc</exclude>
                        <exclude>.prettierignore</exclude>
                        <exclude>.factorypath</exclude>
                        <exclude>yarn.lock</exclude>
                        <exclude>mvnw.cmd</exclude>
                        <exclude>**/*.jh</exclude>
                        <exclude>**/karate-config.js</exclude>
                        <exclude>**/basic-auth.js</exclude>
                        <!-- bypass temporary files created during Jenkins build -->
                        <exclude>env.txt</exclude>
                    </excludes>
                    <mapping>
                        <scss>JAVADOC_STYLE</scss>
                        <ts>SLASHSTAR_STYLE</ts>
                        <feature>SCRIPT_STYLE</feature>
                        <cmmn>XML_STYLE</cmmn>
                        <dmn>XML_STYLE</dmn>
                        <conf>SCRIPT_STYLE</conf>
                    </mapping>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
		</plugins>
	</build>

</project>
